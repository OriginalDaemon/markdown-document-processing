name: CI
on: [ workflow_dispatch, push, pull_request ]
jobs:
  black_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.2
      - uses: psf/black@stable
        with:
          options: "--check --diff"
  black_run:
    runs-on: ubuntu-latest
    if: ${{ always() && contains(join(needs.*.result, ','), 'failure') }}
    needs: [black_check]
    steps:
      - uses: actions/checkout@v4.1.2
      - uses: psf/black@stable
        with:
          options: "--verbose"
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "[auto] - Format Python code with psf/black"
          commit-message: "[auto] - Format Python code with psf/black"
          body: |
            There appear to be some python formatting errors in ${{ github.sha }}. This pull request
            uses the [psf/black](https://github.com/psf/black) formatter to fix these issues.
          base: ${{ github.head_ref }} # Creates pull request onto pull request or commit branch
          branch: ci_action_black_reformatting
          delete-branch: true
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.2
      - uses: actions/setup-python@v5.0.0
      - run: python -m pip install Flake8-pyproject
      - uses: py-actions/flake8@v2.3.0
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.2
      - uses: actions/setup-python@v5.0.0
      - run: |
          python -m venv venv
          source ./venv/bin/activate
      - run: python -m pip install -r requirements.txt || true
      - run: python -m pip install mypy
      - name: Run mypy
        uses: sasanquaneuf/mypy-github-action@releases/v1
        with:
          checkName: 'mypy'   # NOTE: this needs to be the same as the job name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  pytest:
    strategy:
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.2
      - uses: actions/setup-python@v5.0.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: install pytest-cov
        run: pip install pytest pytest-cov pytest-subtest
      - name: install dependencies
        run: pip install -e .[test]
      - name: run pytest --cov
        run: pytest --cov=mddocproc --cov-report=xml
      - name: upload coverage data to coveralls
        uses: coverallsapp/github-action@v2.2.3
        with:
          parallel: true
          flag-name: python-${{ matrix.python-version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
  coveralls-finish:
    needs: pytest
    runs-on: ubuntu-latest
    steps:
      - uses: coverallsapp/github-action@v2.2.3
        with:
          parallel-finished: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
