name: Test End to End
on:
  workflow_run:
    workflows: ['Update Beta Tag']
    types:
      - completed
jobs:
  test_confluence_formatting:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Package the test documentation using the confluence style and upload it as an artifact.
    steps:
      - uses: actions/checkout@v4
      - name: Process test/docs in confluence style
        id: process-confluence
        uses: originaldaemon/markdown-documentation-formatter@beta
        with:
          input: './tests/data/docs'
          output: './tests/data/processed_confluence'
          style: 'confluence'
          args: '--version test'
      - name: Upload processed as artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'processed_confluence'
          path: ${{ steps.process-confluence.outputs.processed }}
      - name: Validate result
        uses: originaldaemon/markdown-documentation-formatter@beta
        with:
          input: ${{ steps.process-confluence.outputs.processed }}
          validate: true
          style: 'confluence'
          args: '--version test'
  test_github_formatting:
    runs-on: ubuntu-latest
    name: Package the test documentation using the github style and upload it as an artifact.
    steps:
      - uses: actions/checkout@v4
      - name: Process test/docs in confluence style
        id: process-github
        uses: originaldaemon/markdown-documentation-formatter@beta
        with:
          input: './tests/data/docs'
          output: './tests/data/processed_github'
          style: 'github'
          args: '--version test'
      - name: Upload processed as artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'processed_github'
          path: ${{ steps.process-github.outputs.processed }}
      - name: Validate result
        uses: originaldaemon/markdown-documentation-formatter@beta
        with:
          input: ${{ steps.process-github.outputs.processed }}
          style: 'github'
          validate: true
          args: '--version test'
